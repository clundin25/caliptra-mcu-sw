// Licensed under the Apache-2.0 license.
//
// generated by registers_generator with caliptra-ss repo at 4f006115433f926f4e599bc8718a39168f70ce5f
//
//
// Warning: caliptra-ss was dirty: M third_party/caliptra-rtl
// M third_party/i3c-core
//
pub const RV_BITMANIP_ZBA: u32 = 1;
pub const RV_BITMANIP_ZBB: u32 = 1;
pub const RV_BITMANIP_ZBC: u32 = 1;
pub const RV_BITMANIP_ZBE: u32 = 0;
pub const RV_BITMANIP_ZBF: u32 = 0;
pub const RV_BITMANIP_ZBP: u32 = 0;
pub const RV_BITMANIP_ZBR: u32 = 0;
pub const RV_BITMANIP_ZBS: u32 = 1;
pub const RV_DIV_BIT: u32 = 4;
pub const RV_DIV_NEW: u32 = 1;
pub const RV_DMA_BUF_DEPTH: u32 = 5;
pub const RV_FAST_INTERRUPT_REDIRECT: u32 = 1;
pub const RV_ICACHE_ONLY: u32 = 1;
pub const RV_LSU2_DMA: u32 = 0;
pub const RV_LSU_NUM_NBLOAD: u32 = 4;
pub const RV_LSU_NUM_NBLOAD_WIDTH: u32 = 2;
pub const RV_LSU_STBUF_DEPTH: u32 = 4;
pub const RV_TIMER_LEGAL_EN: u32 = 1;
pub const RV_USER_MODE: u32 = 1;
pub const RV_DCCM_BANK_BITS: u32 = 2;
pub const RV_DCCM_BITS: u32 = 14;
pub const RV_DCCM_BYTE_WIDTH: u32 = 4;
pub const RV_DCCM_DATA_WIDTH: u32 = 32;
pub const RV_DCCM_EADR: u32 = 0x5000_3fff;
pub const RV_DCCM_ECC_WIDTH: u32 = 7;
pub const RV_DCCM_ENABLE: u32 = 1;
pub const RV_DCCM_FDATA_WIDTH: u32 = 39;
pub const RV_DCCM_INDEX_BITS: u32 = 10;
pub const RV_DCCM_NUM_BANKS: u32 = 4;
pub const RV_DCCM_OFFSET: u32 = 0;
pub const RV_DCCM_REGION: u32 = 5;
pub const RV_DCCM_RESERVED: u32 = 0x1400;
pub const RV_DCCM_ROWS: u32 = 1024;
pub const RV_DCCM_SADR: u32 = 0x5000_0000;
pub const RV_DCCM_SIZE: u32 = 16;
pub const RV_DCCM_WIDTH_BITS: u32 = 2;
pub const RV_LSU_SB_BITS: u32 = 14;
pub const RV_ICCM_BANK_BITS: u32 = 2;
pub const RV_ICCM_BANK_HI: u32 = 3;
pub const RV_ICCM_BANK_INDEX_LO: u32 = 4;
pub const RV_ICCM_BITS: u32 = 17;
pub const RV_ICCM_EADR: u32 = 0x4001_ffff;
pub const RV_ICCM_ECC_WIDTH: u32 = 7;
pub const RV_ICCM_INDEX_BITS: u32 = 13;
pub const RV_ICCM_NUM_BANKS: u32 = 4;
pub const RV_ICCM_OFFSET: u32 = 0;
pub const RV_ICCM_REGION: u32 = 4;
pub const RV_ICCM_RESERVED: u32 = 0x1000;
pub const RV_ICCM_ROWS: u32 = 8192;
pub const RV_ICCM_SADR: u32 = 0x4000_0000;
pub const RV_ICCM_SIZE: u32 = 128;
pub const RV_DEBUG_SB_MEM: u32 = 0xc058_0000;
pub const RV_EXTERNAL_DATA: u32 = 0xe058_0000;
pub const RV_EXTERNAL_DATA_1: u32 = 0xd000_0000;
pub const RV_SERIALIO: u32 = 0xf058_0000;
pub const RV_UNUSED_REGION0: u32 = 0xb000_0000;
pub const RV_UNUSED_REGION1: u32 = 0xa000_0000;
pub const RV_UNUSED_REGION2: u32 = 0x9000_0000;
pub const RV_UNUSED_REGION3: u32 = 0x7000_0000;
pub const RV_UNUSED_REGION4: u32 = 0x3000_0000;
pub const RV_UNUSED_REGION5: u32 = 0x2000_0000;
pub const RV_UNUSED_REGION6: u32 = 0x1000_0000;
pub const RV_UNUSED_REGION7: u32 = 0;
pub const RV_NMI_VEC: u32 = 0x1111_0000;
pub const RV_PIC_BASE_ADDR: u32 = 0x6000_0000;
pub const RV_PIC_BITS: u32 = 15;
pub const RV_PIC_INT_WORDS: u32 = 8;
pub const RV_PIC_MEIE_COUNT: u32 = 255;
pub const RV_PIC_MEIE_MASK: u32 = 1;
pub const RV_PIC_MEIE_OFFSET: u32 = 0x2000;
pub const RV_PIC_MEIGWCLR_COUNT: u32 = 255;
pub const RV_PIC_MEIGWCLR_MASK: u32 = 0;
pub const RV_PIC_MEIGWCLR_OFFSET: u32 = 0x5000;
pub const RV_PIC_MEIGWCTRL_COUNT: u32 = 255;
pub const RV_PIC_MEIGWCTRL_MASK: u32 = 3;
pub const RV_PIC_MEIGWCTRL_OFFSET: u32 = 0x4000;
pub const RV_PIC_MEIP_COUNT: u32 = 8;
pub const RV_PIC_MEIP_MASK: u32 = 0;
pub const RV_PIC_MEIP_OFFSET: u32 = 0x1000;
pub const RV_PIC_MEIPL_COUNT: u32 = 255;
pub const RV_PIC_MEIPL_MASK: u32 = 0xf;
pub const RV_PIC_MEIPL_OFFSET: u32 = 0;
pub const RV_PIC_MEIPT_COUNT: u32 = 255;
pub const RV_PIC_MEIPT_MASK: u32 = 0;
pub const RV_PIC_MEIPT_OFFSET: u32 = 0x3004;
pub const RV_PIC_MPICCFG_COUNT: u32 = 1;
pub const RV_PIC_MPICCFG_MASK: u32 = 1;
pub const RV_PIC_MPICCFG_OFFSET: u32 = 0x3000;
pub const RV_PIC_OFFSET: u32 = 0;
pub const RV_PIC_REGION: u32 = 6;
pub const RV_PIC_SIZE: u32 = 32;
pub const RV_PIC_TOTAL_INT: u32 = 255;
pub const RV_PIC_TOTAL_INT_PLUS1: u32 = 256;
pub const RV_DATA_ACCESS_ADDR0: u32 = 0;
pub const RV_DATA_ACCESS_ADDR1: u32 = 0;
pub const RV_DATA_ACCESS_ADDR2: u32 = 0;
pub const RV_DATA_ACCESS_ADDR3: u32 = 0;
pub const RV_DATA_ACCESS_ADDR4: u32 = 0;
pub const RV_DATA_ACCESS_ADDR5: u32 = 0;
pub const RV_DATA_ACCESS_ADDR6: u32 = 0;
pub const RV_DATA_ACCESS_ADDR7: u32 = 0;
pub const RV_DATA_ACCESS_ENABLE0: u32 = 0;
pub const RV_DATA_ACCESS_ENABLE1: u32 = 0;
pub const RV_DATA_ACCESS_ENABLE2: u32 = 0;
pub const RV_DATA_ACCESS_ENABLE3: u32 = 0;
pub const RV_DATA_ACCESS_ENABLE4: u32 = 0;
pub const RV_DATA_ACCESS_ENABLE5: u32 = 0;
pub const RV_DATA_ACCESS_ENABLE6: u32 = 0;
pub const RV_DATA_ACCESS_ENABLE7: u32 = 0;
pub const RV_DATA_ACCESS_MASK0: u32 = 0xffff_ffff;
pub const RV_DATA_ACCESS_MASK1: u32 = 0xffff_ffff;
pub const RV_DATA_ACCESS_MASK2: u32 = 0xffff_ffff;
pub const RV_DATA_ACCESS_MASK3: u32 = 0xffff_ffff;
pub const RV_DATA_ACCESS_MASK4: u32 = 0xffff_ffff;
pub const RV_DATA_ACCESS_MASK5: u32 = 0xffff_ffff;
pub const RV_DATA_ACCESS_MASK6: u32 = 0xffff_ffff;
pub const RV_DATA_ACCESS_MASK7: u32 = 0xffff_ffff;
pub const RV_INST_ACCESS_ADDR0: u32 = 0;
pub const RV_INST_ACCESS_ADDR1: u32 = 0;
pub const RV_INST_ACCESS_ADDR2: u32 = 0;
pub const RV_INST_ACCESS_ADDR3: u32 = 0;
pub const RV_INST_ACCESS_ADDR4: u32 = 0;
pub const RV_INST_ACCESS_ADDR5: u32 = 0;
pub const RV_INST_ACCESS_ADDR6: u32 = 0;
pub const RV_INST_ACCESS_ADDR7: u32 = 0;
pub const RV_INST_ACCESS_ENABLE0: u32 = 0;
pub const RV_INST_ACCESS_ENABLE1: u32 = 0;
pub const RV_INST_ACCESS_ENABLE2: u32 = 0;
pub const RV_INST_ACCESS_ENABLE3: u32 = 0;
pub const RV_INST_ACCESS_ENABLE4: u32 = 0;
pub const RV_INST_ACCESS_ENABLE5: u32 = 0;
pub const RV_INST_ACCESS_ENABLE6: u32 = 0;
pub const RV_INST_ACCESS_ENABLE7: u32 = 0;
pub const RV_INST_ACCESS_MASK0: u32 = 0xffff_ffff;
pub const RV_INST_ACCESS_MASK1: u32 = 0xffff_ffff;
pub const RV_INST_ACCESS_MASK2: u32 = 0xffff_ffff;
pub const RV_INST_ACCESS_MASK3: u32 = 0xffff_ffff;
pub const RV_INST_ACCESS_MASK4: u32 = 0xffff_ffff;
pub const RV_INST_ACCESS_MASK5: u32 = 0xffff_ffff;
pub const RV_INST_ACCESS_MASK6: u32 = 0xffff_ffff;
pub const RV_INST_ACCESS_MASK7: u32 = 0xffff_ffff;
pub const RV_PMP_ENTRIES: u32 = 64;
pub const RV_SMEPMP: u32 = 1;
pub const RV_RESET_VEC: u32 = 0x8000_0000;
pub const SDVT_AHB: u32 = 0;
pub const RV_BUILD_AXI4: u32 = 1;
pub const RV_BUILD_AXI_NATIVE: u32 = 1;
pub const CLOCK_PERIOD: u32 = 100;
pub const RV_EXT_ADDRWIDTH: u32 = 32;
pub const RV_EXT_DATAWIDTH: u32 = 64;
pub const RV_LDERR_ROLLBACK: u32 = 1;
pub const RV_STERR_ROLLBACK: u32 = 0;
pub const RV_XLEN: u32 = 32;
